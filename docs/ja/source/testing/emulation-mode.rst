==================================================
エミュレーションモードによるアプリケーションテスト
==================================================

* 対象バージョン: Asakusa Framework ``0.6.0`` 以降

この文書では、エミュレーションモードを利用したアプリケーションのテストについて説明します。

エミュレーションモード
======================
エミュレーションモードでAsakusa DSLのテストを実行すると、Asakusa Frameworkが提供するラッパー機構を利用してHadoopの処理を実行します。

通常のテスト実行とは異なり、テストを実行しているプロセス内でほとんどの処理が行われるため、デバッグモードのブレークポイントなどを利用できるようになります。

..  attention::
   エミュレーションモードは、Asakusa Framework バージョン |version| において、十分な検証が行われていない試験的な機能として提供しています。

   また、アプリケーションプロジェクトのHadoopライブラリを利用するため、標準で設定されたものと異なるHadoopディストリビューションやバージョンを利用する際に、正しく動かない可能性があります。

フローDSL/バッチDSLのテスト
---------------------------
テストドライバをエミュレーションモードで実行すると、フローDSLやバッチDSLのテスト実行時に、IDEからブレークポイントを指定してデータフロー内の演算子メソッドの動作を確認したり、カバレッジツールと連携して演算子メソッドのテストカバレッジを確認しやすくなります。

インテグレーションテスト
------------------------
バッチテストランナーを利用すると、テストドライバの機構を利用してバッチアプリケーションを動作させられます。主に、インテグレーションテスト時に入出力データ形式を確認する際に便利です。

バッチテストランナーはテストドライバと同様にエミュレーションモード上で実行でき、インテグレーションテスト時のデバッグ作業がやりやすくなります。

..  hint:
    通常の用途では、YAESSを利用してバッチアプリケーションを実行することを推奨します。
    インテグレーションテスト用の機構は、主に開発時のさまざまな動作確認用に利用することを想定しています。

エミュレーションモードの利用方法
================================

エミュレーションモードで利用するモジュール
------------------------------------------
エミュレーションモード用のモジュールはAsakusa FrameworkのMavenリポジトリに以下の内容で登録されています。

..  list-table:: エミュレーションモードで使用するMavenアーティファクト
    :widths: 3 3 4
    :header-rows: 1

    * - グループID
      - アーティファクトID
      - 説明
    * - ``com.asakusafw.sandbox``
      - ``asakusa-test-driver-ext``
      - テストドライバ実行をエミュレーションモードに変更
    * - ``com.asakusafw.sandbox``
      - ``asakusa-test-driver-tools``
      - バッチテストランナーを追加

アプリケーションプロジェクトの設定
----------------------------------
Gradleプロジェクトでエミュレーションモードを使用する場合は
``build.gradle`` の ``dependencies`` ブロック内に ``testRuntime`` 依存関係(コンフィグレーション)に対して
依存定義を追加します。

..  code-block:: groovy

    dependencies {
        ...
        testRuntime group: 'com.asakusafw.sandbox', name: 'asakusa-test-driver-ext', version: asakusafw.asakusafwVersion
        testRuntime group: 'com.asakusafw.sandbox', name: 'asakusa-test-driver-tools', version: asakusafw.asakusafwVersion

Gradle上でのテストドライバ実行
------------------------------
`アプリケーションプロジェクトの設定`_ を行った状態で Gradleの ``test`` タスクを実行すると、
テストドライバがエミュレーションモードで実行されます。

..  tip::
    エミュレーションモードを有効にして Gradle上でテストを実行すると、
    Gradleが提供する `JaCoCo Plugin <http://www.gradle.org/docs/current/userguide/jacoco_plugin.html>`_ などの
    ソースコードカバレッジ取得機能との連携が可能になります。

Eclipse上でのテストドライバ実行
-------------------------------
`アプリケーションプロジェクトの設定`_ を行った状態で Gradleの ``eclipse`` タスクを実行すると、
Eclipse上でアプリケーションプロジェクトに対してエミュレーションモードが有効になります。

この状態でEclipseからテストドライバを利用するテストクラス実行すると、
テストドライバがエミュレーションモードで実行されます。

..  tip::
    エミュレーションモードを有効にすると、
    テストドライバを使ったテストクラスのデバッグ実行時に
    Eclipseのブレークポイント機能などを利用できます。

バッチテストランナーの実行
--------------------------
バッチテストランナーを利用したバッチアプリケーション実行の流れは、
YAESSを利用したアプリケーション実行の流れと同様に以下のようになります。

* アプリケーションのビルド
* アプリケーションのデプロイ
* アプリケーション入力データの配置
* アプリケーションの実行
* アプリケーション実行結果の確認

..  note::
    上記の各手順について詳しくは、:asakusafw:`Asakusa Framework スタートガイド - サンプルアプリケーションの実行 <introduction/start-guide.html#startguide-running-example>` を参照してください。

バッチテストランナーを利用する場合、
「アプリケーションの実行」の手順でYAESSコマンドの代わりに
以下のバッチテストランナーAPIを利用します。

バッチテストランナーAPI
~~~~~~~~~~~~~~~~~~~~~~~
バッチテストランナーを実行するには、 `アプリケーションプロジェクトの設定`_ を行った状態で
``com.asakusafw.testdriver.tools.runner.BatchTestRunner`` を実行します。
指定できるオプションは次の通りです。

``-b,--batch <batch_id>``
  実行するバッチのバッチIDを指定します。 

``-A,--argument <name=value>``
  実行するバッチのバッチ引数を指定します。

例えば :asakusafw:`Asakusa Framework スタートガイド - サンプルアプリケーションの実行 <introduction/start-guide.html#startguide-running-example>` で紹介しているサンプルアプリケーションを実行する場合のオプション指定は以下のようになります。

..  code-block:: sh

    -b example.summarizeSales -A date=2011-04-01
  
..  tip::
    ``BatchTestRunner`` はGradleやEclipseなどから
    通常の ``main`` メソッドを持つJavaクラスを実行するのと同じ方法で
    実行することができます。またJUnitなどのテストハーネスから実行することも可能です。

..  tip::
    ``BatchTestRunner`` はエミュレーションモードの上で動作するため、
    テストドライバのエミュレーションモードと同様にデバッグ機能やカバレッジツールなどと
    連携して使用することができます。

